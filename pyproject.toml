[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==1.8",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-google-play"
version = "0.1.0"
description = "`tap-google-play` is a Singer tap for GooglePlay, built with the Meltano SDK for Singer Taps."
readme = "README.md"
authors = [
  "hotglue <hello@hotglue.xyz>",
  "Edgar Ramírez-Mondragón <edgarrmondragon@hey.com>",
]
maintainers = [
  "Edgar Ramírez-Mondragón <edgarrmondragon@hey.com>",
]
keywords = [
  "ELT",
  "GooglePlay",
  "Meltano",
  "singer.io",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.8"
singer-sdk = "~=0.38.0"
google-play-scraper = { version = "==1.2.7", python = "<4" }

[tool.poetry.dev-dependencies]
pytest = ">=7"
singer-sdk = { version = "~=0.38.0", extras = [
  "testing",
] }

[tool.poetry.scripts]
# CLI declaration
tap-google-play = 'tap_google_play.tap:TapGooglePlay.cli'

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
target-version = "py38"

line-length = 88
src = [
  "tap_google_play",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # missing-type-self
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
]
lint.per-file-ignores."noxfile.py" = [
  "ANN",
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "tap_google_play",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.pytest.ini_options]
addopts = "-vvv"
filterwarnings = [
  "error",
  "default:No records were available to test:UserWarning",
]

[tool.mypy]
python_version = "3.12"
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
